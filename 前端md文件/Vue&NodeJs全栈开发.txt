【@】用nodeJ去模拟mock数据，并向请求的页面返回数据,在build.js=>dev-server.js里面去配置下面的代码
const app = express()		// 这行代码一般已经存在了，只需要继续添加下面代码即可
const router = express.Route()
const Mock = require('数据地址')
router.get('前端请求路径', function(req, res, next{
  res.json(Mock)
})
app.use(router)





【搭建基于Express框架的运行环境】：
1、安装express-generator生成器来快速搭建项目
2、通过生成器自动创建项目
3、配置

[安装express-generator]：npm install -g express-generator	(使用：express --version 去查看是否安装成功)

[创建server项目]：express server	
	1---执行完成后会生成server文件夹，其中bin/www为启动文件
	2---在生成的server文件夹下面安装依赖：npm install
	3---在server文件里面执行node：npm start
	4---在浏览器使用默认的访问路径：localhost:3000 即可访问路由页面，执行成功会显示默认页面

[注意事项]：默认生成的node项目它是使用jade模版语法的，如果不想使用，可以配置成自己想要的模版语法，比如swig或者ejs
	1---先下载swig或者ejs，之后在app.js里面去配置ejs或者swig模版引擎
		swig：npm install --save swig
			1、var swig = require('swig');		// 引人swig模版引擎
			2、app.engine('html', swig.renderFile); // 使用swig模版引擎
			3、app.set('view engine', 'html');	// 配置swig模版引擎
		ejs   ：npm install --save ejs
			1、var ejs = require('ejs');		// 引人ejs模版引擎
			2、app.engine('html', ejs.__express);   // 使用ejs模版引擎
			3、app.set('view engine', 'html');	// 配置ejs模版引擎



【如何使node与vue进行关联】：通过 res.json()方法去向访问路径返回数据给到前端页面
1---在node配置（server目录）里面的router目录里面去配置node访问数据接口，比如goods.js商品数据接口
var express = require('express');
var router = express.Router();
var Goods = require('../models/Goods');

router.get('/goods', function(req, res, next) {
  Goods.find().then(function(goodsList){
    if(!goodsList){
      res.json({
        status:'1',
        message:'数据请求失败'
      });
      return
    }else{
      res.json({
        status:'0',
        message:'数据请求成功',
        result:goodsList
      });
    }
  });
});
module.exports = router;

2---在config目录下面的index.js里面的dev属性下面去配置代理，因为vue的axios或者其他的ajax插件都不能跨域访问数据，所以通过代理的形式去实现跨域请求
dev: {
    ........................
    proxyTable: {
      '/goods/*':{
        target:'http://localhost:3000'	// 访问  goods 或者 goods/xxx 路径时代理	
      }
    },
    ................
}
（提示: 当用户访问goods路径的时候，就会代理到http://localhost:3000这个端口路径，那么前端也就可以通过goods.js里面的node配置拿到返回的数据了）

3---vue前端组件去获取数据
methods:{
  getGoodsList(){   
    axios.get('/goods').then((response)=>{
      this.goodsList = response.data.result;
    }).catch( (error)=>{
      console.log(error)
    })
  }
}
















